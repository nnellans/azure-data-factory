trigger: 'none' # disable CI trigger
pr: 'none' # disable PR trigger

pool:
  vmImage: 'windows-latest' # the AzureFileCopy task requires a Windows agent

parameters:
- name: 'deployType'
  type: 'string'
  values:
  - 'standard'
  - 'linked'
  default: 'standard'

variables:
  azureServiceConnection: 'test-ado-serviceconnection'
  sourceAzureDataFactory: 'adf-test-nn'
  destAzureDataFactory: 'adf-test-new'
  destAzureDataFactoryRG: 'adf-test'
  linkedTemplatesStorageAccount: 'storageAccountName'

resources:
  repositories:
  - repository: 'adf_publish'
    type: 'github'
    name: 'nnellans/azure-data-factory'
    ref: 'adf_publish'
    endpoint: 'nnellans' # githubServiceConnection

steps:

- checkout: 'adf_publish'

#------------------
# If using default Template
#------------------

# perform a what-if deployment
- task: 'AzureCLI@2'
  condition: and( succeeded(), eq(parameters.deployType, 'standard') )
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    scriptArguments: ''
    inlineScript: |
      az deployment group create `
        --what-if
        --resource-group $(destAzureDataFactoryRG) `
        --template-file $(Agent.BuildDirectory)/$(sourceAzureDataFactory)/ARMTemplateForFactory.json`
        --parameters $(Agent.BuildDirectory)/$(sourceAzureDataFactory)/ARMTemplateParametersForFactory.json`

#------------------
# If using Linked Templates
#------------------

# copy the ARM Linked Templates from the ADF repo to an Azure Storage account
- task: 'AzureFileCopy@5'
  name: 'AzureFileCopy'
  condition: and( succeeded(), eq(parameters.deployType, 'linked') )
  inputs:
    azureSubscription: $(azureServiceConnection)
    SourcePath: ''
    Destination: 'AzureBlob'
    storage: $(linkedTemplatesStorageAccount)
    ContainerName: 'linkedTemplates' # will be automatically created if it doesn't exist
    #CleanTargetBeforeCopy: true # default is false
    #sasTokenTimeoutInMinutes: 120 # default is 240

# perform a what-if deployment
- task: 'AzureCLI@2'
  condition: and( succeeded(), eq(parameters.deployType, 'linked') )
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    scriptArguments: ''
    inlineScript: |
      az deployment group create `
        --what-if
        --subscription blah `
        --resource-group blah `
        --template-file $(Agent.BuildDirectory)/$(azureDataFactory)/linkedTemplates/ArmTemplate_master.json`
        --parameters $(Agent.BuildDirectory)/$(azureDataFactory)/linkedTemplates/ArmTemplateParameters_master.json`
        