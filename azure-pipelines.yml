# Example pipeline to do CI/CD for Azure Data Factory
# Read more here:  https://www.nathannellans.com/post/ci-cd-with-azure-data-factory-part-2

trigger: none # disable CI trigger
pr: none # disable PR trigger

parameters:
- name: whatIf
  displayName: Run a What-If Deployment?
  type: boolean
  default: true
- name: deployTemplate
  displayName: Type of ARM Template to deploy
  type: string
  values:
  - standard
  - linked
  default: standard

#!! UPDATE THESE TO MATCH YOUR ENVIRONMENT
variables:
  azureServiceConnection: '' # Azure DevOps 'Service Connection' of type Azure Resource Manager

  sourceAdf: '' # name of the source ADF instance
  
  destAdfRg: '' # name of the resource group for the destination ADF instance
  destAdf: '' # name of the destination ADF instance
  # Override parameters for the destination ADF instance
  destAdfParams: >-
    factoryName=$(destAdf)
    key=value
    key=value

  linkedTemplatesStorage: '' # name of the Storage Account to hold the Linked ARM Templates
  linkedTemplatesStorageContainer: linkedtemplates # name of the Container in the Storage Account, will be automatically created if it doesn't exist

resources:
  repositories:
  #!! UPDATE THIS TO MATCH YOUR ENVIRONMENT
  - repository: adfTemplates
    type: github
    name: nnellans/azure-data-factory # github repo where the adf_publish branch is located
    ref: adf_publish # name of the publish branch
    endpoint: '' # Azure DevOps 'Service Connection' of type GitHub

pool:
  vmImage: windows-latest # the AzureFileCopy task requires a Windows agent

steps:

- checkout: self
  path: s\self
- checkout: adfTemplates
  path: s\adfTemplates

- task: AzurePowerShell@5
  displayName: Run pre-deployment Script
  condition: and( succeeded(), eq('${{ parameters.whatIf }}', 'false') ) # no need to run the script if doing what-if
  inputs:
    azureSubscription: $(azureServiceConnection)
    pwsh: true
    azurePowerShellVersion: LatestVersion
    ScriptType: FilePath
    ScriptPath: $(System.DefaultWorkingDirectory)\self\PrePostDeploymentScript.Ver2.ps1
    ScriptArguments: >-
      -armTemplate "$(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\ARMTemplateForFactory.json"
      -armTemplateParameters "$(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\ARMTemplateParametersForFactory.json"
      -ResourceGroupName "$(destAdfRg)"
      -DataFactoryName "$(destAdf)"
      -predeployment $true
      -deleteDeployment $false

#------------------------------------
# Deploy Standard ARM Template
#------------------------------------
- task: AzureCLI@2
  displayName: Deploy Standard ARM Template
  condition: and( succeeded(), eq('${{ parameters.deployTemplate }}', 'standard') )
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: pscore
    scriptLocation: inlineScript
    ${{ if eq(parameters.whatIf, true) }}:
      inlineScript: |
        az deployment group what-if `
          --resource-group $(destAdfRg) `
          --template-file $(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\ARMTemplateForFactory.json `
          --parameters $(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\ARMTemplateParametersForFactory.json `
          --parameters $(destAdfParams)
    ${{ else }}:
      inlineScript: |
        az deployment group create `
          --resource-group $(destAdfRg) `
          --template-file $(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\ARMTemplateForFactory.json `
          --parameters $(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\ARMTemplateParametersForFactory.json `
          --parameters $(destAdfParams)

#------------------------------------
# Deploy Linked ARM Templates
#------------------------------------
- task: AzureFileCopy@5
  name: AzureFileCopy # the task needs a name so that we can reference the output variables later
  displayName: Copy Linked ARM Templates to Azure Storage
  condition: and( succeeded(), eq('${{ parameters.deployTemplate }}', 'linked') )
  inputs:
    azureSubscription: $(azureServiceConnection)
    SourcePath: $(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\linkedTemplates\ArmTemplate_*.json
    Destination: AzureBlob
    storage: $(linkedTemplatesStorage)
    ContainerName: $(linkedTemplatesStorageContainer)
    CleanTargetBeforeCopy: true # default is false
    sasTokenTimeoutInMinutes: 120 # default is 240

- task: 'AzureCLI@2'
  displayName: Deploy Linked ARM Templates
  condition: and( succeeded(), eq('${{ parameters.deployTemplate }}', 'linked') )
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: pscore
    scriptLocation: inlineScript
    ${{ if eq(parameters.whatIf, true) }}:
      inlineScript: |
        # remove the trailing '/' from the Uri
        $fixedURI = "$(AzureFileCopy.StorageContainerUri)" -replace "$(linkedTemplatesStorageContainer)/", "$(linkedTemplatesStorageContainer)"
        
        az deployment group what-if `
          --resource-group $(destAdfRg) `
          --template-file $(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\linkedTemplates\ArmTemplate_master.json `
          --parameters "$(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\linkedTemplates\ArmTemplateParameters_master.json" `
          --parameters $(destAdfParams) containerUri="$fixedURI" containerSasToken='"$(AzureFileCopy.StorageContainerSasToken)"'
    ${{ else }}:
      inlineScript: |
        # remove the trailing '/' from the Uri
        $fixedURI = "$(AzureFileCopy.StorageContainerUri)" -replace "$(linkedTemplatesStorageContainer)/", "$(linkedTemplatesStorageContainer)"
        
        az deployment group create `
          --resource-group $(destAdfRg) `
          --template-file $(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\linkedTemplates\ArmTemplate_master.json `
          --parameters "$(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\linkedTemplates\ArmTemplateParameters_master.json" `
          --parameters $(destAdfParams) containerUri="$fixedURI" containerSasToken='"$(AzureFileCopy.StorageContainerSasToken)"'

#------------------------------------

- task: AzurePowerShell@5
  displayName: Run post-deployment Script
  condition: and( succeeded(), eq('${{ parameters.whatIf }}', 'false') ) # no need to run the script if doing what-if
  inputs:
    azureSubscription: $(azureServiceConnection)
    pwsh: true
    azurePowerShellVersion: LatestVersion
    ScriptType: FilePath
    ScriptPath: $(System.DefaultWorkingDirectory)\self\PrePostDeploymentScript.Ver2.ps1
    ScriptArguments: >-
      -armTemplate "$(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\ARMTemplateForFactory.json"
      -armTemplateParameters "$(System.DefaultWorkingDirectory)\adfTemplates\$(sourceAdf)\ARMTemplateParametersForFactory.json"
      -ResourceGroupName "$(destAdfRg)"
      -DataFactoryName "$(destAdf)"
      -predeployment $false
      -deleteDeployment $true
